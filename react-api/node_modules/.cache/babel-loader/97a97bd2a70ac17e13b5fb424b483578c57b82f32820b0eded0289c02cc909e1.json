{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\ReactBackend\\\\test\\\\react-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cancel, isCancel] = useState(false);\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        isCancel(true);\n        throw new Error(\"Something Went Wrong ....Retrying\");\n      }\n      const data = await response.json();\n      const movieData = data.results;\n      const transform = movieData.map(obj => {\n        return {\n          id: obj.episode_id,\n          title: obj.title,\n          openingText: obj.opening_crawl,\n          releaseDate: obj.release_date\n        };\n      });\n      setMovies(transform);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n      console.log(error);\n    }\n  }, []);\n  if (cancel) {\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n  }\n  function stopCalling() {\n    isCancel(true);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"2.5rem\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCalling,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1XrjkgdXcwRgk9wU5SKdrgDUU4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","cancel","isCancel","fetchData","response","fetch","ok","Error","data","json","movieData","results","transform","map","obj","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","console","log","stopCalling","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","_c","$RefreshReg$"],"sources":["D:/git/ReactBackend/test/react-api/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cancel, isCancel] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        isCancel(true);\n        throw new Error(\"Something Went Wrong ....Retrying\");\n      }\n      const data = await response.json();\n\n      const movieData = data.results;\n      const transform = movieData.map((obj) => {\n        return {\n          id: obj.episode_id,\n          title: obj.title,\n          openingText: obj.opening_crawl,\n          releaseDate: obj.release_date,\n        };\n      });\n      setMovies(transform);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n      console.log(error);\n    }\n  }, []);\n  if (cancel) {\n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n  }\n\n  function stopCalling() {\n    isCancel(true);\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchData}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n        {isLoading && <h1 style={{ fontSize: \"2.5rem\" }}>Loading...</h1>}\n        {!isLoading && error && <h1>{error}</h1>}\n        <button onClick={stopCalling}>Cancel</button>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}