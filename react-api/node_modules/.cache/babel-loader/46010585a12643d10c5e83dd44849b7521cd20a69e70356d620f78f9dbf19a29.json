{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\ReactBackend\\\\test\\\\react-api\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryAttempts, setRetryAttempts] = useState(0);\n  const maxRetries = 5;\n  const retryDelay = 5000; // milliseconds\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong ....Retrying\");\n      }\n      const data = await response.json();\n      const movieData = data.results;\n      const transform = movieData.map(obj => {\n        return {\n          id: obj.episode_id,\n          title: obj.title,\n          openingText: obj.opening_crawl,\n          releaseDate: obj.release_date\n        };\n      });\n      setMovies(transform);\n      setIsLoading(false);\n      setRetryAttempts(0);\n    } catch (error) {\n      setIsLoading(false);\n      if (retryAttempts < maxRetries) {\n        console.log(`Attempt ${retryAttempts + 1}: Retry after ${retryDelay / 1000} seconds.`);\n        setRetryAttempts(retryAttempts + 1);\n        setTimeout(fetchData, retryDelay);\n      } else {\n        setError(error.message);\n        console.log(error);\n      }\n      console.log(error);\n    }\n  }, [retryAttempts]);\n  useEffect(() => {\n    fetchData();\n    return () => clearTimeout(); // Cleanup function to clear timeout on unmount\n  }, [fetchData]);\n  function stopCalling() {\n    setRetryAttempts(maxRetries); // Stop further retry attempts\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"2.5rem\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCalling,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z7NHkFp1mhBrM+sgF1XhAHTukGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","retryAttempts","setRetryAttempts","maxRetries","retryDelay","fetchData","response","fetch","ok","Error","data","json","movieData","results","transform","map","obj","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","console","log","setTimeout","message","clearTimeout","stopCalling","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","_c","$RefreshReg$"],"sources":["D:/git/ReactBackend/test/react-api/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryAttempts, setRetryAttempts] = useState(0);\n  const maxRetries = 5;\n  const retryDelay = 5000; // milliseconds\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong ....Retrying\");\n      }\n      const data = await response.json();\n\n      const movieData = data.results;\n      const transform = movieData.map((obj) => {\n        return {\n          id: obj.episode_id,\n          title: obj.title,\n          openingText: obj.opening_crawl,\n          releaseDate: obj.release_date,\n        };\n      });\n      setMovies(transform);\n      setIsLoading(false);\n      setRetryAttempts(0);\n    } catch (error) {\n      setIsLoading(false);\n      if (retryAttempts < maxRetries) {\n        console.log(\n          `Attempt ${retryAttempts + 1}: Retry after ${\n            retryDelay / 1000\n          } seconds.`\n        );\n        setRetryAttempts(retryAttempts + 1);\n\n        setTimeout(fetchData, retryDelay);\n      } else {\n        setError(error.message);\n        console.log(error);\n      }\n\n      console.log(error);\n    }\n  }, [retryAttempts]);\n  useEffect(() => {\n    fetchData();\n    return () => clearTimeout(); // Cleanup function to clear timeout on unmount\n  }, [fetchData]);\n\n  function stopCalling() {\n    setRetryAttempts(maxRetries); // Stop further retry attempts\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchData}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n        {isLoading && <h1 style={{ fontSize: \"2.5rem\" }}>Loading...</h1>}\n        {!isLoading && error && <h1>{error}</h1>}\n        <button onClick={stopCalling}>Cancel</button>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}